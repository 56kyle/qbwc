
namespace :gen do

  task :invoice[quantity: 1] => [:environment] do |t, args|
    c_start = Company.last.id + 1
    invoices_enum = []
    args[:quantity].times do |iter|
      invoices_enum << {invoice_number: rand(999999), amount: rand(9999), bill_day_id: rand(4), description: 'autogenerated', void: nil, company_id: rand(c_start)}
    end
    invoices = Invoice.create(invoices_enum)
    Rake::Task.invoke(:job[invoices])
  end

  task :invoice_line[quantity: 1] => [:environment] do |t, args|
    i_l_start = InvoiceLine.last.id + 1
    inv_lines_enum = []
    invoice_ids = Invoice.pluck(:id)
    invoice_id = invoice_ids[rand(invoice_ids.length)]
    args[:quantity].times do |iter|
      inv_lines_enum << {amount: rand(9999), invoice_id: invoice_id}
    end
    lines = InvoiceLine.create(inv_lines_enum)
    Rake::Task.invoke(:job[lines])
  end

  task :company[quantity: 1] => [:environment] do |t, args|
    c_start = Company.last.id + 1
    companies_enum = []
    args[:quantity].times do |iter|
      companies_enum << {name: "company_#{c_start + iter}", brands_id: rand(999999)}
    end
    companies = Company.create(companies_enum)
    Rake::Task.invoke(:job[companies])
  end

  task :payment[quantity: 1] => [:environment] do |t, args|
    p_start = Payment.last.id + 1
    payments_enum = []
    c_id_max = Company.last.id
    args[:quantity].times do
      payments_enum << {amount: rand(9999999), ref_number: rand(999999), void: nil, company_id: rand(c_id_max)}
    end
    payments = Payment.create(payments_enum)
    Rake::Task.invoke(:job[payments])
  end

  task :job[:entity] => [:environment] do |t, args|
    to_qb(args[:entity])
  end
end